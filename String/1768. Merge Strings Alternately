// Two pointer Approach

class Solution {
public:
    string mergeAlternately(string word1, string word2) {
      string ans ="";
      int i = 0, j = 0, M = word1.size(), N = word2.size();
        while (i < M || j < N) {
            if (i < M) ans += word1[i++];
            if (j < N) ans += word2[j++];
        }
        return ans;       
    }
};

2nd Approach
class Solution {
public:
    string mergeAlternately(string word1, string word2) {
      const int n = min(word1.length(), word2.length());
      string prefix;

      for(int i = 0; i < n; ++i) {
         prefix += word1[i];
         prefix += word2[i];
       }

    return prefix + word1.substr(n) + word2.substr(n);    
    }
};

